{"version":3,"file":"edit_questions.min.js","sources":["../src/edit_questions.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @module     mod_capquiz\n * @author     Sebastian S. Gundersen <sebastian@sgundersen.com>\n * @copyright  2019 NTNU\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery'], function($) {\n\n    var parameters = {\n        courseModuleId: 0,\n    };\n\n    /**\n     * Send an action to the server.\n     * @param {Object} data\n     * @param {Object} onSuccess\n     * @param {Object} onError\n     */\n    function sendAction(data, onSuccess, onError) {\n        $.ajax({\n            type: 'post',\n            url: 'action.php',\n            data: data,\n            success: onSuccess,\n            error: onError\n        });\n    }\n\n    /**\n     * Send the new default rating for the question list to the server.\n     * @param {Object} data\n     * @param {number} rating\n     * @param {Object} onSuccess\n     * @param {Object} onError\n     */\n    function sendDefaultQuestionRating(data, rating, onSuccess, onError) {\n        sendAction({\n            'action': 'set-default-question-rating',\n            'id': parameters.courseModuleId,\n            'rating': rating,\n        }, onSuccess, onError);\n    }\n\n    /**\n     * Send the new rating for the question to the server.\n     * @param {Object} data\n     * @param {number} rating\n     * @param {Object} onSuccess\n     * @param {Object} onError\n     */\n    function sendQuestionRating(data, rating, onSuccess, onError) {\n        sendAction({\n            'action': 'set-question-rating',\n            'id': parameters.courseModuleId,\n            'question-id': data.questionId,\n            'rating': rating,\n        }, onSuccess, onError);\n    }\n\n    /**\n     * Send the new value, and avoid race condition.\n     * @param {Object} $input\n     * @param {Object} sendInput\n     * @param {Object} data\n     */\n    function submitInput($input, sendInput, data) {\n        $input.data('saving', true);\n        $input.data('dirty', false);\n        var $indicator = $input.next();\n        $indicator.css('color', 'blue');\n        sendInput(data, $input.val(), function() {\n            if ($input.data('dirty') === true) {\n                submitInput($input, sendInput, data);\n            } else {\n                $indicator.css('color', 'green');\n                $input.data('dirty', false);\n                $input.data('saving', false);\n            }\n        }, function() {\n            $indicator.css('color', 'red');\n        });\n    }\n\n    /**\n     * Send the new rating for the question, and avoid race condition.\n     * @param {Object} $input\n     */\n    function submitQuestionRating($input) {\n        submitInput($input, sendQuestionRating, {questionId: $input.data('question-id')});\n    }\n\n    /**\n     * Send the new default rating for the question list, and avoid race condition.\n     * @param {Object} $input\n     */\n    function submitDefaultQuestionRating($input) {\n        submitInput($input, sendDefaultQuestionRating, null);\n    }\n\n    /**\n     * Register an input event listener for submission.\n     * @param {string} query\n     * @param {Object} submit\n     */\n    function registerListener(query, submit) {\n        $(document).on('input', query, function(event) {\n            var $input = $(event.target);\n            var isBeingSaved = $input.data('saving');\n            if (isBeingSaved === true) {\n                $input.data('dirty', true);\n                return;\n            }\n            submit($input);\n        });\n    }\n\n    /**\n     * Sorts a table by the respective column based on $header.\n     * It searches for an element of class \"capquiz-sortable-item\" inside the <td>, and if found,\n     * the value attribute is used if it exists. Otherwise, the inner html is used to sort by.\n     *\n     * The <td> tag may not have the item class, as it has no effect on the sorting.\n     * Their children elements are not required to have the class either. The inner html of <td> will be used then.\n     *\n     * The first column in the table must be an index of the row.\n     *\n     * @param {Object} $header The header column for which to sort the table by.\n     */\n    function sortTable($header) {\n        const column = $header.index();\n        const $table = $header.parent().parent();\n        let $rows = $table.find('tr:gt(0)').toArray().sort(function(rowA, rowB) {\n            const $colA = $(rowA).children('td').eq(0);\n            const $colB = $(rowB).children('td').eq(0);\n            return parseInt($colA.text()) - parseInt($colB.text());\n        });\n        $table.append($rows);\n        $rows = $table.find('tr:gt(0)').toArray().sort(function(rowA, rowB) {\n            const $colA = $(rowA).children('td').eq(column);\n            const $colB = $(rowB).children('td').eq(column);\n            const $itemA = $colA.find('.capquiz-sortable-item');\n            const $itemB = $colB.find('.capquiz-sortable-item');\n            let valA;\n            if ($itemA.length === 0) {\n                valA = $colA.html();\n            } else {\n                valA = $itemA.val().length === 0 ? $itemA.html() : $itemA.val();\n            }\n            let valB;\n            if ($itemB.length === 0) {\n                valB = $colB.html();\n            } else {\n                valB = $itemB.val().length === 0 ? $itemB.html() : $itemB.val();\n            }\n            if ($.isNumeric(valA) && $.isNumeric(valB)) {\n                return valA - valB;\n            } else {\n                return valA.toString().localeCompare(valB);\n            }\n        });\n        const ascending = ($table.data('asc') === 'true');\n        $table.data('asc', ascending ? 'false' : 'true');\n        const iconName = (ascending ? 'fa-arrow-up' : 'fa-arrow-down');\n        $.each($table.find('.capquiz-sortable'), function() {\n            $(this).find('.fa').remove();\n        });\n        $header.prepend('<i class=\"fa ' + iconName + '\"></i>');\n        if (!ascending) {\n            $rows = $rows.reverse();\n        }\n        $table.append($rows);\n        let i = 1;\n        $table.find('tr:gt(0)').each(function() {\n            $(this).find('td:first-child').html(i);\n            i++;\n        });\n    }\n\n    /**\n     * Register click event listeners for the sortable table columns.\n     */\n    function registerSortListener() {\n        $(document).on('click', '.capquiz-sortable', function() {\n            sortTable($(this));\n        });\n        $('.capquiz-sortable-default-asc').each(function() {\n            sortTable($(this));\n            sortTable($(this));\n        });\n        $('.capquiz-sortable-default-desc').each(function() {\n            sortTable($(this));\n        });\n    }\n\n    /**\n     * Set the tab indices for the question rating elements to be more user friendly.\n     */\n    function fixTabIndicesForQuestionRatingInputs() {\n        $('.capquiz-question-rating-submit-wrapper button').each(function(index, object) {\n            $(object).attr('tabindex', -1);\n        });\n    }\n\n    /**\n     * Register click event listener for \"Add to quiz\" button.\n     */\n    function listenAddToQuiz() {\n        $('.capquiz-add-selected-questions').on('click', function() {\n            var questionIds = '';\n            $('#categoryquestions td input[type=checkbox]:checked').each(function() {\n                questionIds += $(this).attr('name').slice(1) + ',';\n            });\n            $.post('action.php', {\n                'action': 'add-question',\n                'id': parameters.courseModuleId,\n                'question-id': questionIds,\n            }, function() {\n                location.reload();\n            });\n        });\n    }\n\n    return {\n        initialize: function(courseModuleId) {\n            parameters.courseModuleId = courseModuleId;\n            registerListener('.capquiz-question-rating input', submitQuestionRating);\n            registerListener('.capquiz-default-question-rating input', submitDefaultQuestionRating);\n            fixTabIndicesForQuestionRatingInputs();\n            registerSortListener();\n            listenAddToQuiz();\n        }\n    };\n\n});\n"],"names":["define","$","parameters","courseModuleId","sendAction","data","onSuccess","onError","ajax","type","url","success","error","sendDefaultQuestionRating","rating","sendQuestionRating","questionId","submitInput","$input","sendInput","$indicator","next","css","val","submitQuestionRating","submitDefaultQuestionRating","registerListener","query","submit","document","on","event","target","sortTable","$header","column","index","$table","parent","$rows","find","toArray","sort","rowA","rowB","$colA","children","eq","$colB","parseInt","text","append","$itemA","$itemB","valA","valB","length","html","isNumeric","toString","localeCompare","ascending","iconName","each","this","remove","prepend","reverse","i","initialize","object","attr","questionIds","slice","post","location","reload"],"mappings":"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"}